#include <bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef long double ld;

typedef set<int>::iterator sit;
typedef map<int,int>::iterator mit;
typedef vector<int>::iterator vit;

const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int MAXN = 1e6 + 3;

#define _  %  MOD
#define __ %= MOD

#define      each(it,s)        for(auto it = s.begin(); it != s.end(); ++it)
#define      sortA(v)          sort(v.begin(), v.end())
#define      sortD(v)          sort(v.begin(), v.end(), greater<auto>())
#define      fill(a)           memset(a, 0, sizeof (a))

#define      swap(a,b)        {a=a+b;b=a-b;a=a-b;}
#define      rep(i, n)         for(ll i = 0; i < (n); ++i)
#define      repA(i, a, n)     for(ll i = a; i <= (n); ++i)
#define      repD(i, a, n)     for(ll i = a; i >= (n); --i)
#define watch(x) cout << (#x) << " is " << (x) <<endl

#define fi first
#define se second
#define mp make_pair
#define pb push_back

#define fbo find_by_order
#define ook order_of_key

ll gcd(ll a,ll b){if(b==0) return a; else return gcd(b,a%b);}
ll power(ll x,ll y){ll res=1; while(y>0){if(y&1) res=res*x;y=y>>1;x=x*x;}return res;} // modular exponent
ll n;
const int maxn=2e5+5;
vector<ll> a(maxn),b(maxn);
vector<ll> adj1[maxn];
vector<ll> adj2[maxn];
vector<ll> sum(maxn,0);
vector<ll> vis(maxn,0);
void dfs(ll u)
{
	vis[u]=1;
	sum[u]=a[u];
	ll temp=0;
	for(auto v:adj1[u])
	{
		if(vis[v]==1) continue;
		dfs(v);
		temp+=max(sum[v],0ll);
		if(sum[v]<=0)
		{
			adj2[u].pb(v);
		}
		else adj2[v].pb(u);
	}
	sum[u]+=temp;
	return ;
}
vector<ll> res;
void dfs2(ll u)
{
	if(vis[u]) return ;
	vis[u]=1;
	for(auto v:adj2[u])
	{
		dfs2(v);
	}
	res.pb(u);
	return ;
}
int main()
{
    ios_base::sync_with_stdio(false); // don't use printf and scanf
    cin.tie(NULL); // cout<<fixed<<setprecision
	cin>>n;
	repA(i,1,n) cin>>a[i];
	repA(i,1,n)
	{
		cin>>b[i];
		if(b[i]!=-1)
		{
			adj1[b[i]].pb(i);
		}
	}
	for(ll i=1;i<=n;i++)
	{
		if(b[i]==-1) dfs(i);
	}
	ll ans=0;
	for(ll i=1;i<=n;i++) ans+=sum[i];
	cout<<ans<<'\n';
	for(ll i=1;i<=n;i++) vis[i]=0;
	for(ll i=1;i<=n;i++)
	{
		dfs2(i);
	}
	reverse(res.begin(),res.end());
	for(auto v:res) cout<<v<<" ";
	cout<<'\n';
	return 0;
}
// JUST ASK YOURSELF DID YOU GIVE YOUR BEST ? ISSE ZYADA
// KUCH KAR BHI NAHI SAKTE !! ENJOY AND GIVE YOUR BEST!!
