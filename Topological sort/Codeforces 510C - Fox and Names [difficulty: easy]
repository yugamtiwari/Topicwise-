#include <bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef long double ld;

typedef set<int>::iterator sit;
typedef map<int,int>::iterator mit;
typedef vector<int>::iterator vit;

const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int MAXN = 1e6 + 3;

#define _  %  MOD
#define __ %= MOD

#define      each(it,s)        for(auto it = s.begin(); it != s.end(); ++it)
#define      sortA(v)          sort(v.begin(), v.end())
#define      sortD(v)          sort(v.begin(), v.end(), greater<auto>())
#define      fill(a)           memset(a, 0, sizeof (a))

#define      swap(a,b)        {a=a+b;b=a-b;a=a-b;}
#define      rep(i, n)         for(ll i = 0; i < (n); ++i)
#define      repA(i, a, n)     for(ll i = a; i <= (n); ++i)
#define      repD(i, a, n)     for(ll i = a; i >= (n); --i)
#define watch(x) cout << (#x) << " is " << (x) <<endl

#define fi first
#define se second
#define mp make_pair
#define pb push_back

#define fbo find_by_order
#define ook order_of_key

ll gcd(ll a,ll b){if(b==0) return a; else return gcd(b,a%b);}
ll power(ll x,ll y){ll res=1; while(y>0){if(y&1) res=res*x;y=y>>1;x=x*x;}return res;} // modular exponent
vector<int> adj[26];
vector<int> clr(26,0);
vector<int> ans;
bool dfs(int u)
{
  if(clr[u]==2) return false;
  clr[u]=1;
  for(auto v:adj[u])
  {
    if(clr[v]==0)
    {
      if(dfs(v)) return true;
    }
    else if(clr[v]==1)
    {
      return true;
    }
  }
  clr[u]=2;
  ans.pb(u);
  return false;
}
int main()
{
    ios_base::sync_with_stdio(false); // don't use printf and scanf
    cin.tie(NULL); // cout<<fixed<<setprecision
    ll n;
    cin>>n;
    vector<string> arr(n);
    rep(i,n)
    {
      cin>>arr[i];
    }
    for(ll i=0;i<n-1;i++)
    {
      string s1,s2;
      s1=arr[i];s2=arr[i+1];
      ll len=min(s1.length(),s2.length());
      ll idx=0;
      while(s1[idx]==s2[idx]&&idx<len) idx++;
      if(idx==len && s1.length()>s2.length())
      {
        cout<<"Impossible\n";
        return 0;
      }
      if(idx<len)
      {
        char ch1=s1[idx];
        char ch2=s2[idx];
        // watch(ch1);watch(ch2);
        adj[ch1-'a'].pb(ch2-'a');
      }
    }
    for(int i=0;i<26;i++)
    {
      if(dfs(i))
      {
        cout<<"Impossible\n";
        return 0;
      }
    }
    reverse(ans.begin(),ans.end());
    for(int it:ans)
    {
      char ch=it+'a';
      cout<<ch;
    }
    cout<<'\n';
    return 0;
}
// JUST ASK YOURSELF DID YOU GIVE YOUR BEST ? ISSE ZYADA
// KUCH KAR BHI NAHI SAKTE !! ENJOY AND GIVE YOUR BEST!!
